name: Release

on: workflow_dispatch

# Permissions required for semantic-release to commit changes and publish to GitHub Packages,
# and for Docker build/push to publish to GHCR and create attestations.
permissions:
  contents: write # Allow tagging and committing release changes by semantic-release
  packages: write # Allow publishing npm package to GitHub Packages & Docker image to GHCR
  id-token: write # Allow OIDC token generation for Docker provenance attestations

jobs:
  release-npm:
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    env:
      HUSKY: '0'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@jonathanbennett'

      - name: Install Yarn
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      # Configure Yarn for publishing to GitHub Packages
      - name: Setup Yarn for publishing
        run: |
          yarn config set npmAuthToken "${NODE_AUTH_TOKEN}"
          yarn config set npmPublishRegistry "https://npm.pkg.github.com"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-docker:
    runs-on: ubuntu-latest
    needs: release-npm
    if: needs.release-npm.outputs.new_release_published == 'true'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release-npm.outputs.new_release_version }}
            type=raw,value=latest,enable=${{ !contains(needs.release-npm.outputs.new_release_version, 'beta') }}
            type=raw,value=beta,enable=${{ contains(needs.release-npm.outputs.new_release_version, 'beta') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ROOM_ASSISTANT_VERSION=${{needs.release-npm.outputs.new_release_version}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
