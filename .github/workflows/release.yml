name: Release

on: workflow_dispatch

# Permissions required for semantic-release to commit changes and publish to GitHub Packages,
# and for Docker build/push to publish to GHCR and create attestations.
permissions:
  contents: write # Allow tagging and committing release changes by semantic-release
  packages: write # Allow publishing npm package to GitHub Packages & Docker image to GHCR
  id-token: write # Allow OIDC token generation for Docker provenance attestations

jobs:
  release-npm:
    runs-on: ubuntu-latest
    # Add permissions specific to this job (overrides top-level if needed, but inherits here)
    # permissions:
    #   contents: write
    #   packages: write
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    env:
      HUSKY: '0'

    steps:
      - uses: actions/checkout@v4 # Updated version
        with:
          # Ensure we fetch tags for semantic-release
          fetch-depth: 0
          persist-credentials: false # Recommended for semantic-release to use GITHUB_TOKEN

      - name: Use Node.js 20.x # Updated Node version
        uses: actions/setup-node@v4 # Updated version
        with:
          node-version: 20.x
          cache: 'yarn' # Use yarn for caching
          registry-url: 'https://npm.pkg.github.com'
          scope: '@jonathanbennett' # Adjust this to match your GitHub username/org

      - name: Install Yarn
        run: corepack enable

      # Setup .yarnrc.yml for GitHub Packages
      - name: Setup Yarn for GitHub Packages
        run: |
          yarn config set npmRegistryServer "https://npm.pkg.github.com"
          yarn config set npmAlwaysAuth true
          yarn config set npmAuthToken "${{ secrets.GITHUB_TOKEN }}"

      - name: Install dependencies
        run: yarn install --immutable

      - name: Create new release
        # Updated action version
        # Uses GITHUB_TOKEN implicitly for auth via yarn config
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-docker:
    runs-on: ubuntu-latest
    needs: release-npm
    if: needs.release-npm.outputs.new_release_published == 'true'
    # Add permissions specific to this job (overrides top-level if needed, but inherits here)
    permissions:
      contents: read # Needed for checkout
      packages: write # Needed to push to GHCR
      attestations: write # Needed for Docker build attestations
      id-token: write # Needed for Docker build attestations using OIDC

    steps:
      - uses: actions/checkout@v4 # Updated version

      - name: Log in to GitHub Container Registry # Updated login action for GHCR
        uses: docker/login-action@v3 # Updated version
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Use the GitHub Actions token identity
          password: ${{ secrets.GITHUB_TOKEN }} # Use the automatically generated token

      - name: Set up QEMU # Updated version
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx # Updated version
        uses: docker/setup-buildx-action@v3

      # Replaced explicit cache step with build-push-action's cache handling

      - name: Docker meta # New step: Generate tags and labels for GHCR
        id: meta
        uses: docker/metadata-action@v5 # Use metadata action
        with:
          # images format: ghcr.io/owner/repo (owner lowercased automatically by action)
          images: ghcr.io/${{ github.repository }}
          # Generate tags based on the semantic release version and 'latest'/'beta' logic
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release-npm.outputs.new_release_version }}
            type=raw,value=latest,enable=${{ !contains(needs.release-npm.outputs.new_release_version, 'beta') }}
            type=raw,value=beta,enable=${{ contains(needs.release-npm.outputs.new_release_version, 'beta') }}

      - name: Build and push Docker image # Updated build/push step
        uses: docker/build-push-action@v6 # Updated version
        with:
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }} # Use tags from metadata action
          labels: ${{ steps.meta.outputs.labels }} # Use labels from metadata action
          build-args: | # Pass release version as build arg
            ROOM_ASSISTANT_VERSION=${{needs.release-npm.outputs.new_release_version}}
          cache-from: type=gha # Enable GitHub Actions cache
          cache-to: type=gha,mode=max # Enable GitHub Actions cache (write)
          provenance: true # Generate SLSA provenance attestations

      # Removed Update description on DockerHub step
